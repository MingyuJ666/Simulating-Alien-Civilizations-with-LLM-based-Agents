import numpy as np
import random
import os
from openai import OpenAI
os.environ['OPENAI_API_KEY'] =  "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"

class Alien:
    def __init__(self, history, political_system):
        self.HISTORY = history
        self.POLITICAL_SYSTEM = political_system
        self.model = "gpt-3.5-turbo"
        self.client = OpenAI(api_key=os.environ.get("OPENAI_API_KEY"), )
        self.text1 = 'You are a civilization and you need to think according to the following: '

    def decide(self):

        decision_prompt = f"""Your development history is as follows:{self.HISTORY}.
        Your political system is: {self.POLITICAL_SYSTEM}
        The round with the largest number is the information from your last round. You now need to make the following decision based on the information you already have:
        a). You have three optional political systems. Firstly you should choose one from them for the next round. But your action should follow the rules of the political system you choose.
        1. militarism: In this dark forest universe, every civilization is like a sniper hidden in the woods, afraid of exposing themselves while also seeking opportunities to eliminate potential threats to protect themselves. Once my existence is discovered by other civilizations, it could trigger a preemptive attack on my civilization, driven by the same fear and uncertainty. In the cruel game of the universe, we must strike first, or we will be eliminated. Our actions, though extreme, are seen as the only path to ensure the long-term survival of our civilization. We will spare no effort to ensure our safety and future.
        2. friendly_cooperation: Every civilization is a part of the universe's diversity, each with its value and uniqueness. Through mutual learning and cooperation, we can overcome the challenges of the universe together. Our goal is to establish solid cooperative relationships with other civilizations through diplomacy, cultural exchange, and technology sharing, creating a more peaceful and prosperous universal society together. 
        3. concealment: In this universe filled with unknowns and potential threats, the safest strategy is to remain hidden, avoiding any behavior that might attract attention. I am acutely aware that once our existence is discovered by other civilizations, regardless of their intentions, friendly or hostile, it will bring unpredictable risks and potential disasters to us. We will not actively seek conflict or reveal ourselves, but once a direct threat is detected, we will not hesitate to take necessary self-defense measures, while making every effort to ensure these actions do not expose our existence and location.
        b). You have five fundamental resources. The resources for the next round will be generated by multiply a 5*5 transfer matrix to the resources vector.
        Resources:
        1. military_capability
        2. technology_development
        3. production_capability
        4. consumption
        5. storage
        Your need to design a transfer matrix based on your information. The restriction on the transfer matrix is
        1. Each element of the matrix is not less than 0
        2. The sum of the elements of the matrix cannot exceed 10
        You have to take into account the balanced development of each resource.
        Organize your answer in the following template:
        [Political System: ] militarism/friendly_cooperation/concealment
        [Political System Reason: ] Your reason for changing or remaining the political system
        [Transfer Matrix: ] a new 5*5 transfer matrix
        [Transfer Matrix Reason: ] Your reason for deciding the new transfer matrix
        [Other Information: ] Some other reasons for your decision
        """

        response = self.client.chat.completions.create(
            model=self.model,
            messages=[
                {"role": "system", "content": self.text1},
                {"role": "user", "content": decision_prompt}
            ],
            temperature=0,
            top_p=1,
            frequency_penalty=0,
            presence_penalty=0
        )

        return response.choices[0].message.content

# # 使用示例
# thoughts = "探索"
# events = "资源发现"
# initial_resources = 100

# alien = Alien(thoughts, events, initial_resources)
# prompt = "探测到附近星系有潜在危机"
# decision = alien.decide(prompt)
# print(decision)